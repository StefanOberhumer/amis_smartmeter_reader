diff --git a/.pio/libdeps/$$$env$$$/ESP Async WebServer/src/WebHandlers.cpp b/.pio/libdeps/$$$env$$$/ESP Async WebServer/src/WebHandlers.cpp
index 2cd8883..f4a3227 100644     
--- a/.pio/libdeps/$$$env$$$/ESP Async WebServer/src/WebHandlers.cpp
+++ b/.pio/libdeps/$$$env$$$/ESP Async WebServer/src/WebHandlers.cpp
@@ -194,16 +194,26 @@
       return request->requestAuthentication();
 
   if (request->_tempFile == true) {
-    String etag = String(request->_tempFile.size());
+    bool is_modified;
+    String etag = "\"" + String(request->_tempFile.size()) + "\"";     // etag-value needs between quotes !
     if (_last_modified.length() && _last_modified == request->header("If-Modified-Since")) {
-      request->_tempFile.close();
-      request->send(304); // Not modified
+      is_modified = false;
     } else if (_cache_control.length() && request->hasHeader("If-None-Match") && request->header("If-None-Match").equals(etag)) {
+      is_modified = false;
+    } else {
+      is_modified = true;
+    }
+
+    if (!is_modified) {
       request->_tempFile.close();
-      AsyncWebServerResponse * response = new AsyncBasicResponse(304); // Not modified
-      response->addHeader("Cache-Control", _cache_control);
-      response->addHeader("ETag", etag);
-      request->send(response);
+      AsyncWebServerResponse * response = new AsyncBasicResponse(304); // Not modified
+      if (_last_modified.length())
+          response->addHeader("Last-Modified", _last_modified);
+      if (_cache_control.length()) {
+          response->addHeader("Cache-Control", _cache_control);  // HTTP requires cache headers in 200 and 304 to be identical
+          response->addHeader("ETag", etag);
+        }
+        request->send(response);
     } else {
       AsyncWebServerResponse * response = new AsyncFileResponse(request->_tempFile, filename, String(), false, _callback);
       if (_last_modified.length())
